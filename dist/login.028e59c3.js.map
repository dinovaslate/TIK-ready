{"version":3,"sources":["scripts/login.js"],"names":["isValid","elem","types","setCustomValidity","classList","contains","remove","Object","entries","key","value","validity","reportValidity","add","window","toggle1","x","document","getElementById","type","myFunction","e","pass","user","valueMissing"],"mappings":";AAkCA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,KAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAlCA,IAAMA,EAAU,SAACC,EAAMC,GACnBD,EAAKE,kBAAkB,IACpBF,EAAKG,UAAUC,SAAS,YAAYJ,EAAKG,UAAUE,OAAO,WACnCC,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAOC,QAAQN,GAAO,EAAA,EAAA,OAAA,IAAA,CAA5C,IAAA,EAAA,EAAA,EAAA,GAAA,GAAOO,EAAP,EAAA,GAAYC,EAAZ,EAAA,GACCT,EAAKU,SAASF,KACfR,EAAKE,kBAAkBO,GACvBT,EAAKW,iBACLX,EAAKG,UAAUS,IAAI,cAIzBC,OAAOd,QAAUA,EACjB,IAAMe,EAAU,WACTC,IAAAA,EAAIC,SAASC,eAAe,aACnB,YAAVF,EAAEG,KACJH,EAAEG,KAAO,OAETH,EAAEG,KAAO,YAIbL,OAAOC,QAAUA,EACnB,IAAMK,EAAa,SAACC,GACZC,IAAAA,EAAOL,SAASC,eAAe,aAC/BK,EAAON,SAASC,eAAe,SACrClB,EAAQsB,EAAM,CACZE,aAAc,8BAEhBxB,EAAQuB,EAAM,CACZC,aAAc,+BAKlBV,OAAOM,WAAaA","file":"login.028e59c3.js","sourceRoot":"..\\src","sourcesContent":["const isValid = (elem, types) => {\r\n    elem.setCustomValidity(\"\");\r\n    if(elem.classList.contains(\"invalid\")) elem.classList.remove(\"invalid\");\r\n    for(const [key, value] of Object.entries(types)){\r\n      if(elem.validity[key]){\r\n        elem.setCustomValidity(value);\r\n        elem.reportValidity();\r\n        elem.classList.add(\"invalid\");\r\n      }\r\n    }\r\n  }\r\n  window.isValid = isValid;\r\n  const toggle1 = () => {\r\n   const x = document.getElementById(\"typepass1\");\r\n    if (x.type == \"password\") {\r\n      x.type = \"text\";\r\n    } else {\r\n      x.type = \"password\";\r\n    }\r\n  }\r\n\r\n  window.toggle1 = toggle1;\r\nconst myFunction = (e) => {\r\n  const pass = document.getElementById(\"typepass1\");\r\n  const user = document.getElementById(\"userd\");\r\n  isValid(pass, {\r\n    valueMissing: 'Missing input of password',\r\n  });\r\n  isValid(user, {\r\n    valueMissing: 'Missing input of username',\r\n  });\r\n  \r\n}\r\n\r\nwindow.myFunction = myFunction;"]}